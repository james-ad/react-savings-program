{"version":3,"sources":["components/Button.jsx","helpers.js","components/CheckInput.jsx","components/Header.jsx","components/SavingsTotal.jsx","components/TableEntry.jsx","components/Table.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","react_default","a","createElement","Fragment","id","this","props","onClick","buttonFunc","className","buttonName","Component","numberWithCommas","x","toString","replace","convertPercentage","num","percentage","toFixed","CheckInput","currentCheckInput","React","createRef","percentageInput","percentageReadout","amountSaved","_this2","_this$props","currentCheckAmount","currentPercentage","name","type","ref","onKeyUp","event","key","depositCheck","onInput","updateCheckValue","current","value","placeholder","defaultValue","default","concat","updatePercentageValue","components_Button","Header","SavingsTotal","renderSavingsTotal","clearCheckHistory","TableEntry","checkAmount","deleteCheck","Table","tableBody","deleteButton","renderTableEntry","savingsAccount","_this","Object","keys","map","entry","components_TableEntry","check","App","state","check1","check2","objectSpread","forEach","setState","currentTarget","timestamp","Date","now","checkInfo","parseFloat","parseInt","account","reduce","b","components_Header","components_CheckInput","components_Table","components_SavingsTotal","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","htmlPage","querySelector","style","minHeight"],"mappings":"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","file":"static/js/main.832cfb24.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          id={this.props.id}\r\n          onClick={this.props.buttonFunc}\r\n          className=\"app-button\"\r\n        >\r\n          {this.props.buttonName}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","// Add commas to a number\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n// Render percentage of a given number\r\nexport function convertPercentage(num, percentage) {\r\n  return (num * percentage * 0.01).toFixed(2);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { convertPercentage } from \"../helpers\";\r\nimport { numberWithCommas } from \"../helpers\";\r\n\r\nclass CheckInput extends Component {\r\n  currentCheckInput = React.createRef();\r\n  percentageInput = React.createRef();\r\n  percentageReadout = React.createRef();\r\n  amountSaved = React.createRef();\r\n\r\n  render() {\r\n    const { currentCheckAmount, currentPercentage } = this.props;\r\n    return (\r\n      <div className=\"check-input-wrapper\" name=\"wrapper\" id=\"wrapper\">\r\n        {/* 1. Number input  */}\r\n        <input\r\n          type=\"number\"\r\n          name=\"check-input\"\r\n          id=\"check-input\"\r\n          ref={this.currentCheckInput}\r\n          onKeyUp={event => {\r\n            if (event.key === \"Enter\") this.props.depositCheck();\r\n          }}\r\n          onInput={() => {\r\n            this.props.updateCheckValue(this.currentCheckInput.current.value);\r\n          }}\r\n          placeholder={\"$\" + currentCheckAmount}\r\n        />\r\n        {/* 2. Range input  */}\r\n        <input\r\n          type=\"range\"\r\n          name=\"check-input-percentage\"\r\n          id=\"check-input-percentage\"\r\n          defaultValue={currentPercentage}\r\n          default={`${currentPercentage} %`}\r\n          ref={this.percentageInput}\r\n          onInput={() => {\r\n            this.props.updatePercentageValue(\r\n              this.percentageInput.current.value\r\n            );\r\n          }}\r\n        />\r\n        {/* 3. Percentage readout/div  */}\r\n        <div id=\"check-percentage-readout\" ref={this.percentageReadout}>\r\n          {currentPercentage} %\r\n        </div>\r\n        {/* 4. Number readout/div */}\r\n        <div className=\"amount-saved\" ref={this.amountSaved}>\r\n          $\r\n          {numberWithCommas(\r\n            convertPercentage(currentCheckAmount, currentPercentage)\r\n          )}\r\n        </div>\r\n        <Button\r\n          buttonName=\"Deposit Check\"\r\n          buttonFunc={this.props.depositCheck}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckInput;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return <h1 className=\"page-heading\">Savings Calculator</h1>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { numberWithCommas } from \"../helpers\";\r\n\r\nclass SavingsTotal extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"savings-total-wrapper\">\r\n        <h2>Savings Total</h2>\r\n        <div className=\"total-savings-readout\">\r\n          ${numberWithCommas(this.props.renderSavingsTotal().toFixed(2))}\r\n        </div>\r\n        <Button\r\n          buttonFunc={this.props.clearCheckHistory}\r\n          buttonName=\"Clear Check Button\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SavingsTotal;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { convertPercentage } from \"../helpers\";\r\nimport { numberWithCommas } from \"../helpers\";\r\n\r\nclass TableEntry extends Component {\r\n  render() {\r\n    const checkAmount = this.props.checkAmount;\r\n    const percentage = this.props.percentage;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <tr className=\"entry\">\r\n          <td>${numberWithCommas(checkAmount)}</td>\r\n          <td>{percentage}%</td>\r\n          <td className=\"savings-class\">\r\n            ${numberWithCommas(convertPercentage(checkAmount, percentage))}\r\n          </td>\r\n          <td>\r\n            <Button\r\n              buttonFunc={this.props.deleteCheck}\r\n              buttonName=\"&times;\"\r\n              id={this.props.id}\r\n            >\r\n              &times;\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableEntry;\r\n","import React, { Component } from \"react\";\r\nimport TableEntry from \"./TableEntry\";\r\n\r\nclass Table extends Component {\r\n  tableBody = React.createRef();\r\n  deleteButton = React.createRef();\r\n  renderTableEntry = () => {\r\n    const savingsAccount = this.props.savingsAccount;\r\n    return Object.keys(this.props.savingsAccount).map(entry => {\r\n      return (\r\n        <TableEntry\r\n          deleteCheck={this.props.deleteCheck}\r\n          id={entry}\r\n          checkAmount={savingsAccount[entry].check}\r\n          percentage={savingsAccount[entry].percentage}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.renderTableEntry();\r\n  }\r\n  componentDidUpdate() {\r\n    this.renderTableEntry();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"checks-table\">\r\n          <thead className=\"table-heading\">\r\n            <tr className=\"table-heading-row\">\r\n              <th className=\"check-amount-column\">Check Amount</th>\r\n              <th className=\"percentage-saved-column\">Percentage Saved</th>\r\n              <th className=\"amount-saved-column\">Savings</th>\r\n              <th className=\"remove-check-column\">Remove Check</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody ref={this.tableBody} id=\"table-body\">\r\n            {this.renderTableEntry()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CheckInput from \"./components/CheckInput\";\nimport Header from \"./components/Header\";\nimport SavingsTotal from \"./components/SavingsTotal\";\nimport Table from \"./components/Table\";\n\nclass App extends Component {\n  state = {\n    currentCheckAmount: 100,\n    currentPercentage: 10,\n    savingsAccount: {\n      check1: {\n        check: 100,\n        percentage: 10\n      },\n      check2: {\n        check: 200,\n        percentage: 20\n      }\n    }\n  };\n\n  clearCheckHistory = () => {\n    const savingsAccount = { ...this.state.savingsAccount };\n    Object.keys(savingsAccount).forEach(entry => {\n      delete savingsAccount[entry];\n    });\n    this.setState({ savingsAccount });\n  };\n\n  deleteCheck = check => {\n    // 1. Find the selected check by matching id against the key in the savings account\n    const savingsAccount = { ...this.state.savingsAccount };\n    delete savingsAccount[check.currentTarget.id];\n    this.setState({ savingsAccount });\n  };\n\n  depositCheck = (check, percentage) => {\n    const timestamp = `check#${Date.now()}`;\n    const checkInfo = {\n      check: parseFloat(this.state.currentCheckAmount).toFixed(2),\n      percentage: parseInt(this.state.currentPercentage)\n    };\n    // 1. Make a copy of state\n    const savingsAccount = { ...this.state.savingsAccount };\n    // 2. Submit data to state copy\n    savingsAccount[timestamp] = checkInfo;\n    // 3. Update state\n    this.setState({ savingsAccount });\n  };\n\n  renderSavingsTotal = () => {\n    const account = this.state.savingsAccount;\n    return Object.keys(account).reduce(function(a, b) {\n      return a + account[b].check * account[b].percentage * 0.01;\n    }, 0);\n  };\n\n  updateCheckValue = currentCheckAmount => {\n    this.setState({ currentCheckAmount });\n  };\n\n  updatePercentageValue = currentPercentage => {\n    this.setState({ currentPercentage });\n  };\n\n  render() {\n    return (\n      <div id=\"app-wrapper\">\n        <Header />\n        <CheckInput\n          currentCheckAmount={this.state.currentCheckAmount}\n          deleteCheck={this.deleteCheck}\n          depositCheck={this.depositCheck}\n          currentPercentage={this.state.currentPercentage}\n          updateCheckValue={this.updateCheckValue}\n          updatePercentageValue={this.updatePercentageValue}\n        />\n        <Table\n          className={\"table-component\"}\n          currentCheckAmount={this.state.currentCheckAmount}\n          deleteCheck={this.deleteCheck}\n          depositCheck={this.depositCheck}\n          currentPercentage={this.state.currentPercentage}\n          savingsAccount={this.state.savingsAccount}\n        />\n        <SavingsTotal\n          clearCheckHistory={this.clearCheckHistory}\n          renderSavingsTotal={this.renderSavingsTotal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\nwindow.addEventListener(\"resize\", function() {\n  const htmlPage = document.querySelector(\"html\");\n  console.log(htmlPage);\n  htmlPage.style.minHeight = \"100%\";\n});\n"],"sourceRoot":""}